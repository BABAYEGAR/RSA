@using ARM.Models.Enum
@using Opmas.Models.Enum
@model ARM.Models.Application.Profiling
@{
    ViewBag.Title = "Client Profiling";
    Layout = "_Layout";
}
<style>
    .about_slider-area { height: 180px !important; }

    .contact-us-section { padding-top: 0px !important }
</style>
<div class="about_slider-area pt-90">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="slider-text-2 text-center pt-40">
                    <h2 class="color-w font-w-8 font-40 pb-20">CLIENT PROFILING!</h2>
                </div>
            </div>
        </div>
    </div>
</div>
<section class="contact-us-section pb-30">
    <div class="container">
        <div class="form-box clearfix">
            @using (Html.BeginForm("Create", "Event", FormMethod.Post, new {@class = "shake scroll-reveal", enctype = "multipart/form-data"}))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.DateOfBirth, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.DateOfBirth, new {htmlAttributes = new {@class = "form-control", placeholder = "Please select your date of birth"}})
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Gender, new {@class = "control-label"})<span class="required">*</span>
                    @Html.DropDownListFor(model => model.Gender, Html.GetEnumSelectList(typeof(Gender)).OrderByDescending(n => n.Value), "Select your Gender", new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.MartitalStatus, new {@class = "control-label"})<span class="required">*</span>
                    @Html.DropDownListFor(model => model.MartitalStatus, Html.GetEnumSelectList(typeof(MaritalStatus)).OrderByDescending(n => n.Value), "Select your Marital Status", new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.MartitalStatus, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.AnnualSalary, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.AnnualSalary, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter your annual income"}})
                    @Html.ValidationMessageFor(model => model.AnnualSalary, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.MonthlyEmployeeContribution, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.MonthlyEmployeeContribution, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter your monthly employee contribution"}})
                    @Html.ValidationMessageFor(model => model.MonthlyEmployeeContribution, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.MonthlyEmployerContribution, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.MonthlyEmployerContribution, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter your monthly employer contribution"}})
                    @Html.ValidationMessageFor(model => model.MonthlyEmployerContribution, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.RetirementAge, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.RetirementAge, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter your expected retirement age"}})
                    @Html.ValidationMessageFor(model => model.RetirementAge, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.IdealRetirementBalance, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.IdealRetirementBalance, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter your ideal retirement balance"}})
                    @Html.ValidationMessageFor(model => model.IdealRetirementBalance, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.IncomeAsideRsa, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.IncomeAsideRsa, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter any other annual income aside RSA"}})
                    @Html.ValidationMessageFor(model => model.IncomeAsideRsa, "", new {@class = "text-danger"})
                </div>

                <div class="form-group col-md-12">
                    <button type="submit" class="btn btn-purple waves-effect waves-light">Submit</button>
                </div>
            }
        </div>
    </div>
</section>